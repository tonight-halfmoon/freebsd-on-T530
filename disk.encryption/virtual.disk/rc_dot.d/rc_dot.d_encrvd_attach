#!/bin/sh
#
# PROVIDE: Attach an encrypted virtual disk
# REQUIRE:
# KEYWORD: 

. /etc/rc.subr

name="encrvd_attach"
rcvar=${name}_enable

stop_cmd=detach_encrvd
start_cmd=attach_encrvd

nothing()
{
}
# Terminology
# 		md		Memory Disk
#		dev		Device
#		mdconfig	Memory Disk Configuration	
#		geli		Disk Encryption Technology Method
#		mp		mounting point
#		vnimg		image file backing up a vnode

init_variables()
{
 	_dev="/dev/${_md}"
	_geli_md_key="/etc/geli/md0.key"
	_mp="/usr/home/rosemary/ebuckets"
	_dev_dot_eli="${_dev}"'.eli'
	_vnimg="/usr/local/var/vnimg.ebucket" 
}

detach_encrvd()
{
	printf 'Detaching the virtual disk ...\n\n'
	_md="md0"
	init_variables ${_md}
	found=`mdconfig -l -u ${_dev} | awk '{print $4}'`

	if [ "$found" = ${_vnimg} ]; then
		umount -f ${_mp}
		geli detach /dev/md0.eli
		mdconfig -d -u 0
		echo "Done."
	fi
}

attach_encrvd()
{
	printf '\n\nAttaching encrypted vnode md ...\n\n'

	_md="md0"
	init_variables ${_md}

	#if mount -d ${_dev_dot_eli} 2>&1 >/dev/null; then
	if mount -d ${_dev_dot_eli} 2>/dev/null; then
		# "Un-mounting ..."
		umount ${_mp}

		if checkyesno background_fsck; then
			_fsck_cmd="fsck -F"
		else
			_fsck_cmd="fsck"
		fi
		if ! eval ${_fsck_cmd} ${_dev_dot_eli} >/dev/null; then
			echo "Fsck failed on ${_dev_dot_eli}, not mounting the filesystem."
		else	
			echo "Detaching `${_dev_dot_eli}` ..."
			geli detach ${_dev_dot_eli}
		fi
	fi

	if ! enable_md ${_md}; then
		if ! geli attach -k ${_geli_md_key} ${_dev}; then
			echo "Failed to attach geli md as ${_dev} with the key provided and passphrase."
		else
			mount_dev ${_dev_dot_eli}
			echo "Done."
		fi
	else
		printf '\n\n`md` configuration failed.\n\n'
	fi
}

mount_dev()
{
	mkdir -p ${_mp}
	printf "\n\nMounting $1 on ${_mp} ...\n"
	mount $1 ${_mp}
}

enable_md()
{
	if mdconfig -l -u $1 >/dev/null 2>&1; then	
		echo "Destroying `$1` ..."
		mdconfig -d -u $1
	fi
	if ! mdconfig -a -t vnode -f ${_vnimg} -u 0; then
		return 0
	else
		return 1
	fi
}


load_rc_config ${name}

run_rc_command "$1"
